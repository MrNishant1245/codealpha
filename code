import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

class Student {
    String name;
    ArrayList<Integer> grades;

    Student(String name) {
        this.name = name;
        this.grades = new ArrayList<>();
    }

    void addGrade(int grade) {
        grades.add(grade);
    }

    double getAverage() {
        if (grades.isEmpty()) return 0.0;
        int sum = 0;
        for (int grade : grades) {
            sum += grade;
        }
        return (double) sum / grades.size();
    }

    int getHighest() {
        if (grades.isEmpty()) return 0;
        return grades.stream().max(Integer::compareTo).orElse(0);
    }

    int getLowest() {
        if (grades.isEmpty()) return 0;
        return grades.stream().min(Integer::compareTo).orElse(0);
    }

    public String toString() {
        return "Student: " + name + "\nGrades: " + grades +
                "\nAverage: " + String.format("%.2f", getAverage()) +
                "\nHighest: " + getHighest() + "\nLowest: " + getLowest() + "\n";
    }
}

public class Main extends JFrame {

    private JTextField nameField, gradeField;
    private JTextArea outputArea;
    private ArrayList<Student> students = new ArrayList<>();
    private Student currentStudent;

    public Main () {
        setTitle("Student Grade Tracker");
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new FlowLayout());

        nameField = new JTextField(20);
        gradeField = new JTextField(5);
        outputArea = new JTextArea(20, 40);
        outputArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(outputArea);

        JButton newStudentButton = new JButton("New Student");
        JButton addGradeButton = new JButton("Add Grade");
        JButton finishStudentButton = new JButton("Finish Student");
        JButton showReportButton = new JButton("Show Report");

        add(new JLabel("Student Name:"));
        add(nameField);
        add(newStudentButton);

        add(new JLabel("Grade:"));
        add(gradeField);
        add(addGradeButton);

        add(finishStudentButton);
        add(showReportButton);
        add(scrollPane);

        newStudentButton.addActionListener(e -> {
            String name = nameField.getText().trim();
            if (!name.isEmpty()) {
                currentStudent = new Student(name);
                outputArea.append("New student created: " + name + "\n");
                nameField.setText("");
            }
        });

        addGradeButton.addActionListener(e -> {
            if (currentStudent == null) {
                outputArea.append("Please create a student first.\n");
                return;
            }
            try {
                int grade = Integer.parseInt(gradeField.getText());
                currentStudent.addGrade(grade);
                outputArea.append("Grade " + grade + " added.\n");
                gradeField.setText("");
            } catch (NumberFormatException ex) {
                outputArea.append("Invalid grade.\n");
            }
        });

        finishStudentButton.addActionListener(e -> {
            if (currentStudent != null) {
                students.add(currentStudent);
                outputArea.append("Student " + currentStudent.name + " saved.\n\n");
                currentStudent = null;
            }
        });

        showReportButton.addActionListener(e -> {
            outputArea.setText("=== All Students Report ===\n");
            for (Student s : students) {
                outputArea.append(s.toString() + "\n");
            }
        });
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }
}
